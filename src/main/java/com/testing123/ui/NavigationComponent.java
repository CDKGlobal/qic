package com.testing123.ui;

import java.util.List;

import com.testing123.controller.AvailableResources;
import com.testing123.controller.ComponentController;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.ListSelect;

public class NavigationComponent extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private AbsoluteLayout mainLayout;
	//private ListSelect listSelect_1;
	private Button button_1;
	private ComboBox endComboBox;
	private ComboBox startComboBox;
	private GridLayout layout;
	private Label errorLabel;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public NavigationComponent(GridLayout layout) {
		this.layout = layout;
		buildMainLayout();
		setCompositionRoot(mainLayout);
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("1000px");
		mainLayout.setHeight("100px");

		// top-level component properties
		setWidth("1000px");
		setHeight("100px");
		
		List<String> options = AvailableResources.getAvailableDates();
		
		// comboBox_1
		startComboBox = new ComboBox("Start Date");
		startComboBox.setImmediate(false);
		startComboBox.setNullSelectionAllowed(false);
		startComboBox.setTextInputAllowed(false);
		startComboBox.setWidth("170px");
		startComboBox.setHeight("-1px");

		for (String option : options) {
			startComboBox.addItem(option);
		}
		
		mainLayout.addComponent(startComboBox, "top:20.0px;left:22.0px;");
		
		// comboBox_2
		endComboBox = new ComboBox("End Date");
		endComboBox.setImmediate(false);
		endComboBox.setNullSelectionAllowed(false);
		endComboBox.setTextInputAllowed(false);
		endComboBox.setWidth("170px");
		endComboBox.setHeight("-1px");

		for (String option : options) {
			endComboBox.addItem(option);
		}		

		mainLayout.addComponent(endComboBox, "top:20.0px;left:200.0px;");
		
		// button_1
		button_1 = new Button();
		button_1.setCaption("Go");
		button_1.setImmediate(false);
		button_1.setWidth("-1px");
		button_1.setHeight("-1px");
		errorLabel = new Label("");
		button_1.addClickListener(new Button.ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				String startDate = startComboBox.getValue().toString();
				String endDate = endComboBox.getValue().toString();
				mainLayout.removeComponent(errorLabel);
				if (startComboBox.getValue() == null || endComboBox.getValue() == null) {
					errorLabel = new Label("No date range entered");
					mainLayout.addComponent(errorLabel, "top:20.0px; left:450.0px;");
					return;
				} 
				if (startDate.equals(endDate) || startDate.compareTo(endDate) > 0) {
					errorLabel = new Label("Date range invalid");
					mainLayout.addComponent(errorLabel, "top:20.0px; left:450.0px;");
					return;
				}
				layout.removeComponent(1, 1);
				ComponentController.drawMainComponent(layout, 
						startDate, endDate);
			}
		});
		mainLayout.addComponent(button_1, "top:20.0px;left:380.0px;");

		return mainLayout;
	}
}
