package com.testing123.ui;

import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.servlet.annotation.WebServlet;

import com.testing123.controller.AvailableResources;
import com.testing123.controller.ParameterManager;
import com.testing123.controller.UIState;
import com.testing123.dataObjects.ConvertDate;
import com.testing123.dataObjects.ConvertProject;
import com.vaadin.annotations.Push;
import com.vaadin.annotations.Theme;
import com.vaadin.annotations.Title;
import com.vaadin.annotations.VaadinServletConfiguration;
import com.vaadin.server.DeploymentConfiguration;
import com.vaadin.server.ServiceException;
import com.vaadin.server.VaadinRequest;
import com.vaadin.server.VaadinResponse;
import com.vaadin.server.VaadinServlet;
import com.vaadin.server.VaadinSession;
import com.vaadin.server.VaadinServletService;
import com.vaadin.shared.communication.PushMode;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.UI;

/**
 * QicUI acts as the "Main" of the program.  It sets up the server and initializes the layout for
 * the user interface.
 * 
 * @author chenc
 *
 */
@Push(PushMode.MANUAL)
@SuppressWarnings("serial")
@Theme("mytheme")
@Title("Quality Induced Constraints")
public class QicUI extends UI {
	
	private static final String LEFT_MARGIN_WIDTH = "100px";
	
	/**
	 * Required to run the server (autogenerated by the framework)
	 * 
	 * @author chenc
	 */
	@WebServlet(value = "/*", asyncSupported = true)
	@VaadinServletConfiguration(productionMode = false, ui = QicUI.class)
	public static class Servlet extends VaadinServlet {

	    @Override
	    protected VaadinServletService createServletService(DeploymentConfiguration deploymentConfiguration) throws ServiceException {
	        VaadinServletService servletService = new VaadinServletService(this, deploymentConfiguration) {
	            
	        	@Override
	            public void requestStart(VaadinRequest request, VaadinResponse response) {
	                super.requestStart(request, response);
	            }

	            @Override
	            public void requestEnd(VaadinRequest request, VaadinResponse response, VaadinSession session) {
	                super.requestEnd(request, response, session);
	            }
	        };
	        servletService.init();
	        return servletService;
	    }
		
	}

	
	/**
	 * Initializes the server with a new request.  Sets the layout of the page.
	 * 
	 * The current GridLayout looks like this:
	 * 
	 * ______________________
	 * |	  |		  |		 |
	 * |  l1  |	 l2	  |		 |
	 * |______|_______|______|
	 * |	  |		  |		 |
	 * |	  |	main  |filter|
	 * |	  |		  |		 |
	 * |______|_______|______|
	 * |	  |		  |		 |
	 * |	  |	nav   |		 |
	 * |______|_______|______|
	 * 
	 * @param request
	 */
	@Override
	protected void init(VaadinRequest request) {
		final GridLayout layout = new GridLayout(3, 3);
		layout.setMargin(false);
		setContent(layout);
		
		final AbsoluteLayout l1 = new AbsoluteLayout();
		AbsoluteLayout l2 = new AbsoluteLayout();
		l1.setWidth(LEFT_MARGIN_WIDTH);
		l1.setHeight("90px");
		
		l2.setWidth("800px");
		l2.setHeight("90px");
		
		UIState state = new ParameterManager().getState(request.getParameter("st"), request.getParameter("end"),
				request.getParameter("x"), request.getParameter("y"), request.getParameter("proj"), 
				request.getParameter("auth"));
		
		Label title = new Label("<b>Quality Induced Constraints</b>", ContentMode.HTML);
		title.setStyleName("h1");
		l2.setStyleName("header_background");
		l2.addComponent(title, "top:25px;");
		
		layout.addComponent(l1, 0, 0);
		layout.addComponent(l2, 1, 0);
		
		NavigationComponent nav = new NavigationComponent(layout, state);
		layout.addComponent(nav, 1, 2);
	}
}